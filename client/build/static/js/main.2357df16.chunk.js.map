{"version":3,"sources":["img/BB_logo.png","stores/AdminStore.js","history.js","stores/HomePageStore.js","stores/PaginationStore.js","stores/AppStore.js","components/features/NavBar.js","components/layout/MainLayout.js","components/pages/HomePage.js","components/features/DataUploadingWgo.js","components/features/DataUploadingElud.js","components/common/Error.js","components/common/Spinner.js","components/pages/AdminPage.js","components/pages/NotFoundPage.js","components/pages/LoginPage.js","components/pages/LogoutPage.js","components/pages/OneRecordPage.js","components/features/Table.js","components/pages/DifferencePage.js","components/pages/DGOstatusPage.js","components/pages/DatabasePage.js","components/pages/WithAuth.js","App.js","index.js"],"names":["module","exports","configure","enforceActions","axios","require","AdminStore","appStore","loadEludData","data","Promise","resolve","reject","ulica","nr","ul_cecha","loadWgoData","osoby","this","observable","action","log","logs","elud","wgo","error","dataLoading","a","response","runInAction","e","post","console","createBrowserHistory","HomePageStore","selectedNumber","recordDisabled","selectedDiff","diffDisabled","selectedDGOstatus","statusDisabled","streets","map","s","label","value","numbers","n","diff","d","allRecords","page","sortField","sortOrder","sizePerPage","filters","filter","order","itemsPerPage","startAt","limit","values","Object","keys","f","filterVal","forEach","key","i","get","params","sort","then","res","summary","docs","amount","history","push","loading","resetNumber","computed","selectedOption","selectedStreet","preventDefault","street","number","selectedUnitByAddress","assign","roznica","selectedUnitsByDiff","DGO","selectedUnitsByDGOstatus","PaginationStore","type","selectedPage","homePageStore","getDiffItems","getDGOStatusItems","getSummary","adminStore","paginationStore","login","redirect","email","fetch","method","credentials","status","Error","getEmail","catch","err","alert","adress","NavBar","inject","observer","props","location","Navbar","className","bg","variant","Nav","activeKey","pathname","alt","src","BBlogo","width","height","Link","as","to","eventKey","Text","React","Component","NavbarWithRouter","withRouter","MainLayout","children","DGOoptions","HomePage","diffHandleClick","presentPage","getStreets","getDiff","streetsOptions","streetsHandleChange","numbersOptions","numbersHandleChange","recordHandleClick","diffOptions","diffHandleChange","DGOhandleChange","DGOhandleClick","theme","colors","primary50","primary25","primary","Container","Row","Col","options","onChange","placeholder","noOptionsMessage","Button","onClick","DataUploadingWgo","htmlFor","onFileLoaded","loadWgo","bind","inputStyle","display","parserOptions","header","cssClass","cssInputClass","onError","errorHandle","inputId","DataUploadingElud","loadElud","icon","faExclamationTriangle","style","color","fontSize","resetAdminPanel","override","css","Spinner","size","socket","io","AdminPage","removeAllListeners","on","logReceive","length","faCheckCircle","isEnabled","noButton","renderWgo","renderElud","postData","NotFoundPage","textAlign","Login","handleInputChange","event","target","name","setState","onSubmit","body","JSON","stringify","state","headers","password","required","Logout","logOut","faSignOutAlt","OneRecordPage","resetRecordButton","text","faExclamationCircle","striped","bordered","meldunki","columns","dataField","hidden","textFilter","headerStyle","selectFilter","defaultSorted","customTotal","from","Table","totalSize","onTableChange","hover","remote","bootstrap4","keyField","filterFactory","pagination","paginationFactory","showTotal","nextPageText","lastPageText","firstPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","paginationTotalRenderer","hidePageListOnlyOnePage","noDataIndication","DifferencePage","resetDiffButton","diffHandleTableChange","DGOstatusPage","resetStatusButton","DGOStatusHandleTableChange","DatabasePage","resetLoading","resetAllRecords","downloadLink","summaryHandleTableChange","getAllRecords","withAuth","ComponentToProtect","logIn","reDirect","App","exact","path","component","Home","Database","WithAuth","Admin","NotFound","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2357df16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BB_logo.79ceef8f.png\";","import { observable, action, runInAction } from \"mobx\";\nimport { configure } from \"mobx\";\n// import io from \"socket.io-client\";\nconfigure({ enforceActions: 'observed' });\nconst axios = require('axios');\n\nclass AdminStore {\n    constructor (appStore) {\n        this.appStore = appStore;        \n    }\n\n\n    //database\n    @observable elud = [];\n    @observable wgo = [];\n\n\n   @observable logs = [];\n   @observable loadingDisabled = true;  \n   @observable error = false;\n   @observable dataLoading = false;\n\n  //get logs from node.js\n  @action logReceive = (log) => {\n    // console.log('Logi: ', log)\n        this.logs = [log, ...this.logs];\n  }\n\n  @action resetAdminPanel = () => {\n        this.logs = [];\n        this.elud = [];\n        this.wgo = [];\n        this.error = false;\n        this.dataLoading = false;\n  }\n\n\n//ładowanie danych - AdminPage\nloadEludData = data => {\n  return new Promise(function(resolve, reject) {\n    if (data[0].ulica && data[0].nr && data[0].ul_cecha) {\n      // console.table(data);\n        resolve(data);\n    } else {\n        reject(\"Nie jest ok\");\n    }\n  })}\n\nloadWgoData = data => {\n  return new Promise(function(resolve, reject) {\n    if (data[0].ulica && data[0].nr && data[0].osoby) {\n        resolve(data);\n    } else {\n        reject(\"Nie jest ok\");\n    }\n  })}\n\n@action loadElud = async (data) => {\n  // this.dataLoading = true;\n\n        try {\n\n            const response = await this.loadEludData(data)\n            // console.log('Spr: ', this.dataLoading)\n            if (response) {\n                runInAction(() => {\n                  this.elud = response;\n                  // this.dataLoading = false;\n                })\n            }\n        } catch (error) {\n            runInAction(() => {\n                this.error = true;\n            });\n        }\n    };\n\n\n\n@action\nloadWgo = async (data) => {\n  // this.dataLoading = true;\n        try {\n\n            const response = await this.loadWgoData(data)\n            if (response) {\n                runInAction(() => {\n                  this.wgo = response\n                    // this.dataLoading = false;\n                })\n            }\n        } catch (error) {\n            runInAction(() => {\n                this.error = true;\n            });\n        }\n    };\n\n\n// @action loadWgoData = data => {\n//   return this.wgo = data;\n// };\n\n@action errorHandle = () => {\n  this.error = true;\n}\n\n@action\npostData = async (e ) => {\n  // this.dataLoading = true;\n        try {\n          runInAction(() => {this.dataLoading = true;});\n            const response = await axios.post('/api/updateData', {elud: this.elud, wgo: this.wgo})\n            if (response) {\n              console.log('Status: ', response)\n                runInAction(() => {                \n                this.dataLoading = false;\n                })\n            }\n        } catch (error) {\n            runInAction(() => {\n                this.error = true;\n            });\n        }\n    };\n\n\n}\n\nexport default AdminStore","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import { observable, action, runInAction, computed } from \"mobx\";\nimport { configure } from \"mobx\";\nimport history from \"../history\";\n\n\nconfigure({ enforceActions: 'observed' });\n\nconst axios = require('axios');\n\nclass HomePageStore {\n    constructor (appStore) {\n        this.appStore = appStore;        \n    }\n\n    @observable summary = {};\n    @observable allRecords = []\n    @observable itemsPerPage = 10;\n    @observable startAt = 0;\n    @observable limit = 10;\n\n     //database of filters filters\n    @observable streets = [];\n    @observable numbers = [];\n    @observable diff = [];\n\n    //selected items in filter\n    @observable selectedStreet = '';\n    @observable selectedNumber = null;\n    @observable selectedDiff = null;\n    @observable selectedDGOstatus = null;\n\n    //button's control\n    @observable diffDisabled = true;\n    @observable recordDisabled = true;\n    @observable statusDisabled = true;\n\n   //filtred databse\n   @observable selectedUnitByAddress = {};\n    @observable selectedUnitsByDiff = [];\n    @observable selectedUnitsByDGOstatus = [];\n\n   \n\n    @action resetAllRecords = () => {\n      this.allRecords = []\n    }\n\n//pobieram całą bazę\n@action getSummary = (page, sortField, sortOrder, sizePerPage, filters) => {\n  //  //GET message from server using fetch api\n  //  this.appStore.loading = true\n  //  return axios.get('/api/getSummary')\n  //  .then(res => {runInAction(() => {\n  //  this.summary= res.data})})\n  \n  console.log('Filters: ', filters)\n  let filter = {};\n   let order = 1;\n  if(sizePerPage) {this.itemsPerPage = sizePerPage}\n   this.startAt = (page - 1) * this.itemsPerPage;\n    this.limit = this.itemsPerPage;\n    if (sortOrder === 'desc') { order = -1 }\n    else {order = 1}\n    \n        if (filters) {\n      // console.log('What: ', filters)\n      let values = Object.keys(filters).map(f =>filters[f].filterVal);\n      let keys = Object.keys(filters);\n      // console.log('One: ', keys, ' Two: ', values)\n      keys.forEach((key, i) => filter[key] = values[i]);\n     \n      }\n    \n    // console.log('Route2: ', this.startAt, this.limit)\n  \n    \naxios.get(`/api/getSummary/range/${this.startAt}/${this.limit}`, {\n        params: {\n          // diff: this.selectedDiff,\n          startAt: this.startAt,\n          limit: this.limit,\n          sort: {[sortField]: order},\n          filters: filter\n        }\n      })\n.then(res => {runInAction(() => {\n  this.summary = {\n        docs: res.data.docs,\n        amount: res.data.amount,\n        // itemsPerPage,\n        // selectedPage: page,\n      }\n      if (!this.startAt) {\n        history.push(`/database/range/1/10`)\n      \n      }\n      else {\n      history.push(`/database/range/${this.startAt + 1}/${this.startAt + this.limit}`)}\n      \n      // this.props.history.push(`/raport2/difference/${selectedDiff}/range/${startAt}/${limit}`)\n    }\n    )})\n    \n// .then(console.log('Test: ', this.selectedUnitsByDiff.docs))\n.then(runInAction(() => {this.appStore.loading = false}))\n\n}\n\n//pobieram całą bazę do csv\n@action getAllRecords = () => {\n  //  //GET message from server using fetch api\n   this.appStore.loading = true\n   return axios.get('/api/allRecords')\n   .then(res => {runInAction(() => {\n   this.allRecords= res.data})})\n}\n\n//filtr wg ulicy i numeru\n\n@action getStreets = () => {\n   \n  //GET message from server using fetch api\n  return axios.get('/api/getStreets')\n    .then(res => {runInAction(() => {\n      this.streets = res.data\n      this.resetNumber() \n      })})    \n}\n\n@computed get streetsOptions() {\n  return this.streets.map(s => ({ label: s, value: s }))\n}\n\n@action streetsHandleChange = (selectedOption) => {\n  this.selectedStreet = selectedOption.value;\n  axios.get(`/api/streets/${this.selectedStreet}`)\n.then(res => {runInAction(() => {\n  this.numbers = res.data  \n})})\n}\n\n\n@computed get numbersOptions() {\n  return this.numbers.map(n => ({ label: n, value: n }))\n}\n\n@action resetNumber = () => {\n  this.selectedNumber = null;  \n}\n\n@action numbersHandleChange = (selectedOption) => {\n  console.log('Store: ', selectedOption)\n  this.selectedNumber = selectedOption.value;\n  this.recordDisabled = false;\n  axios.get(`/api/streets/${this.selectedStreet}`)\n.then(res => {runInAction(() => {\n  this.numbers = res.data})})\n        }\n\n@action recordHandleClick = (e) => {\n   e.preventDefault();\naxios.get(`/api/streets/${this.selectedStreet}/${this.selectedNumber}`, {\n        params: {\n          street: this.selectedStreet,\n          number: this.selectedNumber\n        }\n        \n      })\n.then(res => {runInAction(() => {\n   this.selectedUnitByAddress = res.data\n   history.push(`/raport1/address/${this.selectedUnitByAddress.ulica}/${this.selectedUnitByAddress.nr}`)\n  \n  })})}   \n   \n\n  @action resetRecordButton() {\n    this.selectedNumber = null;\n    this.recordDisabled = true;\n  }  \n\n//filtr różnic\n@action getDiff = () => {\n  //GET message from server using fetch api\n  return axios.get('/api/getDiff')\n    .then(res => {runInAction(() => {\n      this.diff = res.data})})\n}\n\n@computed get diffOptions() {\n  return this.diff.map(d => ({ label: d, value: d}))\n}\n\n@action resetDiffButton() {\n  this.selectedDiff = null;\n  this.diffDisabled = true;\n}\n\n@action diffHandleChange = (selectedOption) => {\n  this.selectedDiff = selectedOption.value;\n  this.diffDisabled = false;\n}\n\n// @action diffHandleClick = (e) => {\n//    e.preventDefault();\n\n//   }\n\n@action getDiffItems = (page, sortField, sortOrder, sizePerPage, filters) => {\n  console.log('Filters: ', filters)\n  let filter = {};\n   let order = 1;\n  if(sizePerPage) {this.itemsPerPage = sizePerPage}\n   this.startAt = (page - 1) * this.itemsPerPage;\n    this.limit = this.itemsPerPage;\n    if (sortOrder === 'desc') { order = -1 }\n    else {order = 1}\n    \n    // if (filters === undefined || Object.keys(filters).length === 0) {filter = {diff: this.selectedDiff}}\n    if (filters) {\n      // console.log('Spr: ', filters)\n      let values = Object.keys(filters).map(f =>filters[f].filterVal);\n      let keys = Object.keys(filters);\n      // console.log('One: ', keys, ' Two: ', values)\n      keys.forEach((key, i) => filter[key] = values[i]);\n      Object.assign(filter, {roznica: this.selectedDiff})\n      // console.log('Filter: ', filter)\n      }\n    else {filter = {roznica: this.selectedDiff}}\n    // console.log('Route2: ', this.startAt, this.limit)\n  \n    \naxios.get(`/api/differences/${this.selectedDiff}/range/${this.startAt}/${this.limit}`, {\n        params: {\n          // diff: this.selectedDiff,\n          startAt: this.startAt,\n          limit: this.limit,\n          sort: {[sortField]: order},\n          filters: filter\n        }\n      })\n.then(res => {runInAction(() => {\n  this.selectedUnitsByDiff = {\n        docs: res.data.docs,\n        amount: res.data.amount,\n        // itemsPerPage,\n        // selectedPage: page,\n      }\n      if (!this.startAt) {\n        history.push(`/raport2/difference/${this.selectedDiff}/range/1/10`)\n        console.log('MAM 1', this.selectedDiff)\n      }\n      else {\n        console.log('MAM 2', this.selectedDiff)\n      history.push(`/raport2/difference/${this.selectedDiff}/range/${this.startAt + 1}/${this.startAt + this.limit}`)}\n      // console.log('Push!', history)\n      // this.props.history.push(`/raport2/difference/${selectedDiff}/range/${startAt}/${limit}`)\n    }\n    )})\n    \n// .then(console.log('Test: ', this.selectedUnitsByDiff.docs))\n.then(runInAction(() => {this.appStore.loading = false}))\n    \n  }\n\n//filtr statusu deklaracji\n@action DGOhandleChange = (selectedOption) => {\n  this.selectedDGOstatus = selectedOption.value;\n  this.statusDisabled = false;\n        }\n\n@action getDGOStatusItems = (page, sortField, sortOrder, sizePerPage, filters) => {\n\nconsole.log('Filters: ', filters)\n  let filter = {};\n   let order = 1;\n  if(sizePerPage) {this.itemsPerPage = sizePerPage}\n   this.startAt = (page - 1) * this.itemsPerPage;\n    this.limit = this.itemsPerPage;\n    if (sortOrder === 'desc') { order = -1 }\n    else {order = 1}\n   \n   \n    // if (filters === undefined || Object.keys(filters).length === 0) {filter = {diff: this.selectedDiff}}\n    if (filters) {\n      let values = Object.keys(filters).map(f =>filters[f].filterVal);\n      let keys = Object.keys(filters);\n     \n      keys.forEach((key, i) => filter[key] = values[i]);\n      Object.assign(filter, {DGO: this.selectedDGOstatus})\n      // console.log('Filter: ', filter)\n      }\n    else {filter = {DGO: this.selectedDGOstatus}}\n    // console.log('Filter: ', filter)\n  \n    \naxios.get(`/api/DGOstatus/${this.selectedDGOstatus}}/range/${this.startAt}/${this.limit}`, {\n        params: {\n          startAt: this.startAt,\n          limit: this.limit,\n          sort: {[sortField]: order},\n          filters: filter\n        }\n      })\n.then(res => {runInAction(() => {\n  this.selectedUnitsByDGOstatus = {\n        docs: res.data.docs,\n        amount: res.data.amount,\n        // itemsPerPage,\n        // selectedPage: page,\n      }\n      if (!this.startAt) {\n        history.push(`/raport3/status/${this.selectedDGOstatus}/range/1/10`)\n        console.log('MAM 1', this.selectedDGOstatus)\n      }\n      else {\n      history.push(`/raport3/status/${this.selectedDGOstatus}/range/${this.startAt + 1}/${this.startAt + this.limit}`)}\n      console.log('MAM 2', this.selectedDGOstatus)\n    }\n    )})\n// .then(console.log('Test: ', this.selectedUnitsByDiff.docs))\n.then(runInAction(() => {this.appStore.loading = false}))\n  }\n\n  @action resetStatusButton() {\n    this.selectedDGOstatus = null;\n    this.statusDisabled = true;\n  } \n  \n}\n\n\n\nexport default HomePageStore","import { observable, action } from \"mobx\";\n\nclass PaginationStore {\n    constructor (appStore) {\n        this.appStore = appStore;                      \n    }\n\n    // @observable message = 'Loading...';\n   \n    //pagination\n    // @observable amount = 0;\n    @observable sizePerPage = 10;\n    @observable selectedPage = 0;\n    @observable startAt = 0;\n    \n       \n    //pagination function\n    \n    // @action handlePageClickedDiff = (data) => {\n    //   let selected = data.selected;\n    //   this.selectedPage = selected;\n    //   this.appStore.homePageStore.getDiffItems(this.selectedPage);\n    // };\n\n    // @action handlePageClickedDiff = (page, sizePerPage, data) => {\n    //   this.selectedPage = data.selected;\n    //   page = this.selectedPage;\n    //   sizePerPage =  this.itemsPerPage;\n    //   this.appStore.homePageStore.getDiffItems(this.selectedPage);\n    // };\n\n    @action diffHandleTableChange = (type, { page, sortField, sortOrder,  sizePerPage, filters }) => {\n      this.selectedPage = page;\n      this.sizePerPage = sizePerPage;\n      this.appStore.homePageStore.getDiffItems(this.selectedPage, sortField, sortOrder, this.sizePerPage, filters);\n\n    }\n    \n    @action DGOStatusHandleTableChange  = (type, { page, sortField, sortOrder,  sizePerPage, filters }) => {\n      this.selectedPage = page;\n      this.sizePerPage = sizePerPage;\n      this.appStore.homePageStore.getDGOStatusItems(this.selectedPage, sortField, sortOrder, this.sizePerPage, filters);\n      // console.log(selected)\n    };\n\n    @action summaryHandleTableChange  = (type, { page, sortField, sortOrder,  sizePerPage, filters }) => {\n      this.selectedPage = page;\n      this.sizePerPage = sizePerPage;\n      this.appStore.homePageStore.getSummary(this.selectedPage, sortField, sortOrder, this.sizePerPage, filters);\n      // console.log(selected)\n    };\n    \n    \n    }\n    \n    export default PaginationStore;","import { observable, action } from \"mobx\";\nimport AdminStore from './AdminStore';\nimport HomePageStore from './HomePageStore';\nimport PaginationStore from './PaginationStore';\n\n\nclass AppStore {\n\n  constructor() {\n    this.adminStore = new AdminStore(this);\n    this.homePageStore = new HomePageStore(this);\n    this.paginationStore = new PaginationStore(this);\n  }\n\n  @observable message = 'Loading...';\n   \n    //other\n    @observable loading = false;\n    @observable redirect = false;\n    @observable error = false;     \n    \n  //login & logout\n  @observable login = false;\n  @observable redirect = false;\n  @observable email = '';\n  \n  @action logIn = () => {\n    this.login = true;\n    this.redirect = false;\n  }\n\n  @action logOut = () => {\n   \n    this.login = false;\n    this.email = '';\n    \n      fetch('/api/logout', {\n        method: 'get',\n        credentials: 'include',\n        redirect: \"follow\"\n      }).then(res => {\n        if (res.status === 200) {\n          this.getEmail('');\n          this.adminStore.logs = [];\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      })\n      .catch(err => {\n        console.error(err);\n        alert('Błąd wylogowania. Spróbuj ponownie!');\n      });         \n  }\n  \n\n  @action reDirect = () => {\n    this.redirect = true\n  }\n\n    @action resetLoading = () => {\n      this.loading = false\n    }\n\n    //login Page\n    @action getEmail = (adress) => {\n      this.email = adress\n    }\n    \n    // @action resetSummary = () => {\n    //   this.summary = []\n    // }\n\n    @action errorHandle = () => {\n      this.error = true;\n    }\n\n}\n\n\n\nconst appStore = new AppStore();\n\nexport default appStore;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { observer, inject } from 'mobx-react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport { withRouter } from \"react-router\";\nimport './NavBar.scss';\nimport BBlogo from '../../img/BB_logo.png'\n\n\n@inject('appStore', 'homePageStore')\n@observer\n\n\nclass NavBar extends React.Component {\n  \n    render() {\n        const {login, email} = this.props.appStore;\n       const {startAt ,limit } = this.props.homePageStore;\n       const { location } = this.props;\n            \n        return (\n            <Navbar className=\"navbarContainer\" bg=\"dark\" variant=\"dark\" >\n               <Nav activeKey={location.pathname}>\n                 <img  className='BB_logo'\n                    alt=\"Logo Bielska-Białej\"\n                    src={BBlogo}\n                    width=\"35\"\n                    height=\"30\"                    \n                    />\n                    <Nav.Link as={Link} to='/' eventKey={'/'}>Home</Nav.Link>\n                    <Nav.Link as={Link} to={'/database/range/' + startAt + '/' + limit} eventKey={'/database/range/' + startAt + '/' + limit}>Baza</Nav.Link>\n                    {!login \n                ?  <Nav.Link as={Link} to='/login' eventKey={'/login'}>Zaloguj</Nav.Link> \n                : <div className='adminNavbar'>\n                    <Nav.Link as={Link} to='/admin' eventKey={'/admin'}>Panel administratora</Nav.Link>\n                    <Nav.Link as={Link} to='/logout' eventKey={'/logout'}>Wyloguj</Nav.Link>                    \n                </div>\n                }                     \n                </Nav>\n                {email\n                ? <Navbar.Text className=\"navbarText\">Zalogowano jako: {email}</Navbar.Text>  \n                : null }                          \n            </Navbar>\n        );\n    }\n}\nconst NavbarWithRouter = withRouter(NavBar);\nexport default NavbarWithRouter;","import React from 'react';\nimport NavbarWithRouter from '../features/NavBar';\n\nconst MainLayout = ({ children }) => (\n    <div className='mainContainer'>\n        <NavbarWithRouter/>\n        {children}\n        <footer>\n            <p>Copyright Aleksandra Podsiadlik 2020</p>\n        </footer>    \n    </div>\n    );\n\nexport default MainLayout;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { observer, inject } from 'mobx-react';\n// import AsyncSelect from 'react-select/async';\nimport Select from \"react-select\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n// import Button from 'react-bootstrap/Button';\nimport './HomePage.scss';\n// import history from \"../../history\";\n\nconst DGOoptions = [\n  { value: 'złożona deklaracja odpadowa', label: 'złożona deklaracja odpadowa' },\n  { value: 'niezłożona deklaracja odpadowa', label: 'niezłożona deklaracja odpadowa' },\n];\n\n@inject('appStore', 'homePageStore')\n@observer\n\nexport default class HomePage extends Component {\n\n    componentDidMount() {\n      this.props.homePageStore.getStreets();\n      this.props.homePageStore.getDiff();\n      \n    }\n\n    // componentWillUnmount() {\n    //   this.props.appStore.resetLoading();\n    //   // this.props.homePageStore.resetSummary();      \n    // }\n\n    diffHandleClick = (e) => {\n      e.preventDefault();\n      this.props.homePageStore.getDiffItems(this.props.appStore.presentPage)\n    }\n\n    \n    render() {\nlet {streetsOptions,\n      streetsHandleChange,\n      numbersOptions,\n      numbersHandleChange,\n      recordHandleClick,\n      selectedStreet,\n      selectedNumber,\n      diffOptions,\n      diffHandleChange,\n      selectedDiff,\n      selectedDGOstatus,\n      DGOhandleChange,\n      DGOhandleClick,\n      diffDisabled,\n      recordDisabled,\n      statusDisabled,\n      startAt,\n      limit    \n        } = this.props.homePageStore;\n\n  let theme = theme => ({\n    ...theme,\n    colors: {\n      ...theme.colors,\n      primary50: '#b6b6b6',\n      primary25: '#79969f',\n      primary: 'grey',\n    },\n  })\n\n    \n\n      return (\n        <div className='titleContainer'>\n          <h1 className='title'>Aplikacja do raportowania różnic w osobach zgłoszonych do deklaracji odpadowych i bazy meldunkowej</h1>\n          <Container>\n            <Row>\n              <Col className='column'>\n         <form>\n         <h3>Raport dla punktu adresowego</h3>\n        <Select className='selector street_selector'\n          options={streetsOptions}\n          // value={this.streetsOptions.filter(({value}) => value === selectedStreet)}\n          onChange={streetsHandleChange}\n          // isMulti\n          placeholder=\"Wybierz ulicę\"\n          noOptionsMessage={() => 'BRAK DANYCH'}\n          theme={theme}         \n        />\n\n        <Select\n          options={numbersOptions}\n          // defaultValue={numbersOptions[0]}\n          onChange={numbersHandleChange}\n\n          // isMulti\n          placeholder=\"Wybierz numer\"\n          noOptionsMessage={() => 'BRAK DANYCH'} \n          theme={theme}\n        />\n        <div className='d-flex justify-content-center'>\n        <Button className={recordDisabled ? 'buttonInactive' : 'buttonActive'} onClick={recordHandleClick} >\n        <Link to={recordDisabled ? '#' :`/raport1/address/${selectedStreet}/${selectedNumber}`}>Filtruj</Link>\n\n        </Button>\n        </div>\n      </form>\n          </Col>\n          <Col className='column'>\n             <form>\n             <h3>Raport wg różnic w obu bazach</h3>\n        <Select\n          options={diffOptions}\n          // value={this.streetsOptions.filter(({value}) => value === selectedStreet)}\n          onChange={diffHandleChange}\n          // isMulti\n          placeholder=\"Wybierz różnicę\"\n          noOptionsMessage={() => 'BRAK DANYCH'} \n          theme={theme}\n        />\n        <div className='d-flex justify-content-center diffButton'>\n        <Button className={diffDisabled ? 'buttonInactive' : 'buttonActive'} >\n        {/* <Link to={diffDisabled ? '#' : '/raport2/difference/' + selectedDiff + '/range/' + startAt + '/' + startAt+ 1 + limit}>Filtruj</Link> */}\n        <Link to={diffDisabled ? '#' :`/raport2/difference/${selectedDiff}/range/${startAt + 1}/${startAt + limit}`}>Filtruj</Link>\n        </Button>\n        </div>\n      </form>\n      <p>Różnica na plus oznacza więcej meldunków niż deklaracji. Różnica na minus oznacza więcej deklaracj niż meldunków.</p>\n          </Col>\n          <Col className='column'>\n             <form>\n             <h3>Raport wg złożonych / niezłożonych deklaracji</h3>\n        <Select\n          options={DGOoptions}\n          // value={this.streetsOptions.filter(({value}) => value === selectedStreet)}\n          onChange={DGOhandleChange}\n          // isMulti\n          placeholder=\"Status deklaracji odpadowej\"\n          noOptionsMessage={() => 'BRAK DANYCH'}\n          theme={theme} \n        />\n        <div className='d-flex justify-content-center statusButton'>\n        <Button className={statusDisabled ? 'buttonInactive' : 'buttonActive'} onClick={DGOhandleClick} >\n        <Link to={statusDisabled ? '#' :`/raport3/status/${selectedDGOstatus}/range/${startAt + 1}/${startAt + limit}`}>Filtruj</Link>\n\n        </Button>\n        </div>\n      </form>\n          </Col>\n        </Row>\n      </Container>\n         \n          \n        </div>\n      );\n    }\n  }","import React from \"react\";\nimport CSVReader from 'react-csv-reader';\nimport { observer, inject } from 'mobx-react';\n\n@inject(\"appStore\", 'adminStore')\n@observer\nclass DataUploadingWgo extends React.Component {\n  render() {\n    return (\n      <div className='csv'>\n        <label className=\"custom-file-upload\" htmlFor=\"contained-button-file-1\">\n          <CSVReader\n            onFileLoaded={this.props.adminStore.loadWgo.bind(this)}\n            inputStyle={{display: 'none'}}\n            parserOptions={{header: true}}\n            cssClass=\"csv-reader-input\"\n            cssInputClass='csv-input'\n            onError={this.props.appStore.errorHandle.bind(this)}\n            inputId=\"contained-button-file-1\"\n          />\n          <span className='spanButton'>\n            Wgraj plik .CSV\n          </span>\n        </label>      \n        <p>Wgraj plik z bazą danych WGO. </p>\n      </div>\n    )};\n};\n\nexport default DataUploadingWgo;","import React from \"react\";\nimport CSVReader from 'react-csv-reader';\nimport { observer, inject } from 'mobx-react';\n\n@inject('appStore', 'adminStore')\n@observer\nclass DataUploadingElud extends React.Component {\n\n  render() {\n  return (\n    <div className='csv'>\n      <label className=\"custom-file-upload\" htmlFor=\"contained-button-file-2\">\n        <CSVReader\n          onFileLoaded={this.props.adminStore.loadElud.bind(this)}\n          inputStyle={{display: 'none'}}\n          parserOptions={{header: true}}\n          cssClass=\"csv-reader-input\"\n          cssInputClass='csv-input'\n          onError={this.props.appStore.errorHandle.bind(this)}\n          inputId=\"contained-button-file-2\"\n        />\n      <span className='spanButton'>\n        Wgraj plik .CSV\n      </span>\n    </label>      \n    <p>Wgraj plik ELUD z bazą danych. </p>\n  </div>\n  )};\n};\n\nexport default DataUploadingElud;","import React from \"react\";\nimport { observer, inject } from 'mobx-react';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\n\n@inject('appStore', 'adminStore') \n@observer\nclass Error extends React.Component {\n\n    render() {\n        return (\n            <div className=\"error\">\n                <FontAwesomeIcon icon={faExclamationTriangle} style={{color: 'red', fontSize: 40}}/>                \n                <h4 className=\"error-title\">Błąd. Coś poszło nie tak....</h4>\n                <p>Prawdopodobnie wgrano zły format danych.</p>\n                <div className='button_container'>\n                    <Button onClick={this.props.adminStore.resetAdminPanel} >Spróbuj ponownie</Button>\n                </div>\n            </div>\n        )};\n\n    };\nexport default Error;","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { SyncLoader } from \"react-spinners\";\nimport { observer, inject } from 'mobx-react';\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n@inject('adminStore')\n@observer\n\nclass Spinner extends React.Component {\n\nrender() {\n      return (\n        <div className={!this.props.adminStore.dataLoading ? 'spinnerInactive' : 'spinnerActive'}>\n          <p className=\"spinner-title\">Przetwarzam żądanie...</p>\n          <SyncLoader\n            css={override}\n            size={25}\n            color={\"#79969f\"}\n          />\n        </div>\n    )};\n\n};\nexport default Spinner;","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DataUploadingWgo from '../features/DataUploadingWgo';\nimport DataUploadingElud from '../features/DataUploadingElud';\nimport Error from '../common/Error';\nimport Spinner from '../common/Spinner';\nimport io from 'socket.io-client';\nimport './AdminPage.scss';\nconst socket = io(\"localhost:3001\")\n\n@inject('appStore', 'adminStore') \n@observer\nclass AdminPage extends Component {\n\ncomponentDidMount() {\n  socket.removeAllListeners();\n  socket.on('log', log => this.props.adminStore.logReceive(log));\n}\n\n componentWillUnmount() {\n  //  socket.emit('end');\n   this.props.adminStore.resetAdminPanel();\n  }\n\n  renderElud() {\n    // console.log('What: ', this.props.appStore.loading)\n    \n    if (!this.props.adminStore.elud.length ) {\n      \n      return (\n        <div className='button_container'>\n        <DataUploadingElud />\n        </div>\n      )}\n    \n    if (this.props.adminStore.elud.length) {\n      // console.log('War 3')\n        return (\n          <div className='button_container'>\n          <FontAwesomeIcon\n\t\t\t\t\t\t\t\ticon={faCheckCircle }\n                style={{color: 'green', fontSize: 40}}/>\n          <p>Plik z bazą ELUD wgrano poprawnie.</p>\n          </div>\n        )}\n\n       \n       }\n\n  renderWgo() {\n    \n    if (!this.props.adminStore.wgo.length) {\n      return (\n        <div className='button_container'>\n         <DataUploadingWgo />\n         </div>\n      )}\n    if (this.props.adminStore.wgo.length) {\n        return (\n          <div className='button_container'>\n          <FontAwesomeIcon\n\t\t\t\t\t\t\t\ticon={faCheckCircle}\n                style={{color: 'green', fontSize: 40}}/>\n          <p>Plik WGO wgrano poprawnie.</p>\n          </div>\n        )}\n        \n\n\n  }\n\n  render() {\n    console.log('Logs: ',this.props.adminStore.logs)\n    const isEnabled = this.props.adminStore.wgo.length > 0 && this.props.adminStore.elud.length > 0 && !this.props.adminStore.logs[0];\n    const noButton = this.props.adminStore.wgo.length > 0 && this.props.adminStore.elud.length > 0 ;\n    // console.log('Test: ', this.props.adminStore.wgo.length, this.props.adminStore.elud.length, this.props.appStore.loading, this.props.adminStore.logs)\n  return (\n    <div className='dataLoadingContainer'>\n      <div className='csvTitle'>\n        <h1>Wgranie plików do porównania</h1>        \n      </div>\n      <div className='fileUploadContainer'>\n      <p className='utfStatement'>W celu uzyskania polskich znaków pliki powinny być kodowane w formacie UTF-8</p>\n      <Container >\n      {this.props.adminStore.error ? <Error /> : \n        <Row>\n          <Col>\n          { this.renderWgo() }\n          </Col>\n        <Col>\n        { this.renderElud() }\n        </Col>\n        \n        </Row>}\n      </Container>\n      <div className='button_container'>\n      {noButton ? <h5>Pliki do porównania zostały wczytane poprawnie.</h5> : <h5>Czekam na wczytanie plików.</h5>}\n       <Button \n       className={!isEnabled ? 'buttonInactive' : 'buttonActive'}\n      \n        onClick={this.props.adminStore.postData}\n        >\n          Porównaj obie bazy\n        </Button>\n        \n          \n\n      </div>\n      \n      \n      <div className='logsContainer'>\n      <h5>Logi</h5>\n      <div className='logs'>\n      <ul >\n\t\t\t{ this.props.adminStore.logs.map((log, i) => <li key={i}>{log}</li>)}\n\t\t</ul>\n    <Spinner/>\n    </div>\n    </div>\n      </div>\n    </div>\n    )\n  }\n}\n\n  export default AdminPage;\n\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle} from '@fortawesome/free-solid-svg-icons';\nimport './NotFoundPage.scss';\n\nconst NotFoundPage = () => (\n    <div className='not_found_container'>\n        <h1>Błąd 404. Nie znaleziono strony...</h1>\n        <FontAwesomeIcon\n\t\t\ticon={faExclamationTriangle}\n            style={{color: 'red', fontSize: 80, textAlign: 'center'}}\n        />\n    </div>\n    );\n\nexport default NotFoundPage;","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport Button from 'react-bootstrap/Button';\nimport './LoginPage.scss';\n\n@inject('appStore')\n@observer\nexport default class Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email : '',\n      password: ''\n    };\n  }\n  handleInputChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n \n  onSubmit = (event) => {\n    event.preventDefault();\n    fetch('/api/authenticate', {\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(res => {\n      if (res.status === 200) {\n        this.props.history.push('/admin');\n        this.props.appStore.getEmail(this.state.email);\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    })\n    .catch(err => {\n      console.error(err);\n      alert('Błąd logowania. Spróbuj ponownie!');\n    });\n  }\n\n  render() {\n    return (\n      <div className='loginContainer'>\n          <h1 className='loginTitle'>Logowanie do panelu administratora</h1>          \n          <form className='loginForm' onSubmit={this.onSubmit}>\n            <ul className='formList'>\n              <li>\n                <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Wprowadź email\"\n                value={this.state.email}\n                onChange={this.handleInputChange}\n                required\n              />\n              </li>\n              <li>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Wprowadź hasło\"\n                  value={this.state.password}\n                  onChange={this.handleInputChange}\n                  required\n                />\n              </li>\n              <li>\n                <div className='button_container'>\n                  <Button type=\"submit\">        \n                    Zaloguj\n                  </Button>\n                </div>        \n              </li>       \n            </ul>\n          </form>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport './LogoutPage.scss';\n\n// @inject('routing')\n@inject('appStore')\n@observer\n\nexport default class Logout extends Component {\n\n    componentDidMount() {\n      this.props.appStore.logOut();      \n    }\n    render() {\n        return (\n    <div className='logout_container'>\n        <h1>Wylogowano z panelu administratora!</h1>\n        <FontAwesomeIcon\n\t\t\ticon={faSignOutAlt  }\n            style={{color: '#343a40', fontSize: 80, textAlign: 'center'}}/>\n    </div>\n     )\n    }\n};\n\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport Table from 'react-bootstrap/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport './OneRecordPage.scss';\n@inject('appStore', 'homePageStore')\n@observer\n\nexport default class OneRecordPage extends Component {\n  \n  componentWillUnmount() {\n    this.props.homePageStore.resetRecordButton();\n  }\n\n    render() {      \n      let {selectedUnitByAddress} = this.props.homePageStore;\n      let text;\n      console.log('record: ', selectedUnitByAddress)\n       if (selectedUnitByAddress.roznica === 0) {\n      text = <div><p>Liczba osób zameldowanych jest taka sama jak zgłoszonych do deklaracji odpadowej</p><span className='okRecord'><FontAwesomeIcon\n      icon={faCheckCircle}/></span></div>;\n    } if (selectedUnitByAddress.roznica > 0) {\n      text = <div><p>Liczba osób zameldowanych jest wyższa od zgłoszonych do deklaracji odpadowej o {selectedUnitByAddress.roznica}</p><span className='badRecord'><FontAwesomeIcon\n      icon={faExclamationCircle}/></span></div>;\n    } if (selectedUnitByAddress.roznica < 0) {\n      text = <div><p>Liczba osób zameldowanych jest niższa od zgłoszonych do deklaracji odpadowej o {selectedUnitByAddress.roznica * -1}.</p><span className='okRecord'><FontAwesomeIcon icon={faCheckCircle}/></span></div>;\n      }\n      return (\n        <div className='recordContainer'>\n          <h1 className='recordTitle title'>Raport dla punktu adresowego</h1>\n          <div className='recordTable'>\n          <Table striped bordered >\n            <thead>\n            <tr>\n              <th>ADRES</th>\n              <th>{selectedUnitByAddress.ulica} NR {selectedUnitByAddress.nr}</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>Liczba osób zameldowanych</td>\n              <td>{selectedUnitByAddress.meldunki}</td>\n            </tr>\n            <tr>\n              <td>Liczba osób w deklaracji odpadowej</td>\n              <td>{selectedUnitByAddress.osoby}</td>\n            </tr>\n            <tr>\n              <td>Status deklaracji</td>\n              <td>{selectedUnitByAddress.DGO}</td>\n            </tr>\n            </tbody>\n          </Table>\n          </div>\n            <h3 className='recordText'>{text}</h3>            \n        </div>\n      );\n    }\n  }","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter, selectFilter } from 'react-bootstrap-table2-filter';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\n// import ToolkitProvider from 'react-bootstrap-table2-toolkit';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './Table.scss';\n// import cellEditFactory from 'react-bootstrap-table2-editor';\n// import filterFactory, { textFilter, Comparator } from 'react-bootstrap-table2-filter';\n\n\nconst selectOptions = {\n  'złożona deklaracja odpadowa': 'złożona deklaracja odpadowa',\n  'niezłożona deklaracja odpadowa': 'niezłożona deklaracja odpadowa'  \n};\nconst columns = [{\n    dataField: '_id',\n    text: 'ID',\n    hidden: true\n  },\n     {\n    dataField: 'ulica',\n    text: 'ADRES',\n    sort: true,\n    filter: textFilter({placeholder: 'wprowadź ulicę'}),\n    headerStyle: {width: '230px'}\n  }, {\n    dataField: 'nr',\n    text: 'NUMER',\n    sort: true,\n    filter: textFilter({placeholder: 'wprowadź nr'})\n  }, {\n    dataField: 'meldunki',\n    text: 'LICZBA MELDUNKÓW',\n    sort: true,\n    filter: textFilter({placeholder: 'wprowadź liczbę'})\n  }, {\n    dataField: 'osoby',\n    text: 'LICZBA W DEKLARACJI',\n    sort: true,\n    filter: textFilter({placeholder: 'wprowadź liczbę'})\n  }, {\n    dataField: 'roznica',\n    text: 'RÓŻNICA',\n    sort: true,\n    filter: textFilter({placeholder: 'wprowadź liczbę'})    \n  }, {\n    dataField: 'DGO',\n    text: 'STATUS DEKLARACJI',\n    sort: true,\n    filter: selectFilter({options: selectOptions, placeholder: 'wprowadź status deklaracji'}),\n    headerStyle: {width: '260px'},    \n  }];\n\n  const defaultSorted = [{\n    dataField: 'ulica',\n    order: 'asc'\n  }];\n  \n  \n  const customTotal = (from, to, size) => (\n    <span className=\"react-bootstrap-table-pagination-total\">\n       Pokazuję { from } do { to } z { size } wyników\n    </span>\n  );\n\n   const Table = ({ data, page, sizePerPage, totalSize, onTableChange }) => (\n    <div>\n       \n      <BootstrapTable\n        striped\n        hover\n        // responsive \n        remote\n        bootstrap4\n        keyField=\"_id\"\n        data={ data }\n        columns={ columns }\n        defaultSorted={ defaultSorted }\n        filter={ filterFactory() }\n        pagination={ paginationFactory({ \n          sizePerPage, \n          totalSize, \n          page, \n          showTotal: true,  \n          nextPageText: 'Następna', \n          lastPageText: 'Ostatnia', \n          firstPageText: 'Pierwsza',\n          nextPageTitle: 'Kolejna', \n          prePageTitle: 'Poprzednia',\n          firstPageTitle: 'Pierwsza', \n          lastPageTitle: 'Ostatnia',\n          paginationTotalRenderer: customTotal,\n          hidePageListOnlyOnePage: true\n        })}\n        \n          onTableChange={ onTableChange }\n          noDataIndication=\"Tabela nie zawiera danych\"\n        // cellEdit={ cellEditFactory(cellEditProps) }        \n      \n     />    \n    </div>\n  );\n  export default Table;","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport Table from '../features/Table';\n// import { withRouter } from 'react-router-dom'\n// import Pagination from '../common/Pagination';\n// import Table from 'react-bootstrap/Table';\nimport './DifferencePage.scss';\n\n@inject('appStore', 'homePageStore', 'paginationStore')\n@observer\n\nexport default class DifferencePage extends Component {\n\n  componentDidMount(){\n    this.props.homePageStore.getDiffItems(this.props.appStore.selectedPage);\n    }\n\n  //     componentDidUpdate(prevProps, prevState) {\n  //       let {selectedDiff, startAt, limit } = this.props.homePageStore; \n  //       console.log('3: ', startAt, '4: ', this.props.match.params.startAt)\n  //       let link = `/raport2/difference/${selectedDiff}/range/${startAt}/${limit}`\n  //   if (startAt !== this.props.match.params.startAt && startAt && this.props.match.params.startAt) {\n  //     this.props.history.push(`/raport2/difference/${selectedDiff}/range/${startAt}/${limit}`)\n  //           console.log('Mam')\n  //   }\n  // }\n    //   // if (this.props.appStore.selectedPage !== prevProps.appStore.selectedPage) {\n    //   //   this.props.homePageStore.getDiffItems(this.props.appStore.selectedPage);\n    //   // }\n    // }   \n  \n  componentWillUnmount() {\n    this.props.homePageStore.resetDiffButton();\n  }\n\n    render() {\n       let {selectedUnitsByDiff, selectedDiff } = this.props.homePageStore; \n        let { diffHandleTableChange } = this.props.paginationStore;\n      //  const pageCountbyDiff = Math.ceil(selectedUnitsByDiff.amount / selectedUnitsByDiff.itemsPerPage);\n      \n       \n       \n       if(selectedUnitsByDiff.docs) {\n      return (\n        <div className='dataContainer'>\n          <h1 className='dataTitle'>Raport z punktów adresowych o różnicy {selectedDiff}</h1>\n          <div className='dataTable diffTable'>\n          \n          <Table\n            data={ selectedUnitsByDiff.docs }\n            // page={ selectedPage }\n            // sizePerPage={ selectedUnitsByDiff.itemsPerPage }\n            totalSize={selectedUnitsByDiff.amount}\n            onTableChange={ diffHandleTableChange }\n          />   \n         \n    </div>\n        </div>\n      );\n    }\n    else {return (<div>Loading...</div>)}\n  }\n}\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\n// import Pagination from '../common/Pagination';\nimport Table from '../features/Table';\n// import Table from 'react-bootstrap/Table';\nimport './DifferencePage.scss';\n\n@inject('appStore', 'homePageStore', 'paginationStore')\n@observer\n\nexport default class DGOstatusPage extends Component {\ncomponentDidMount(){\n    this.props.homePageStore.getDGOStatusItems(this.props.appStore.selectedPage);\n    }\n\n    componentWillUnmount() {\n      this.props.homePageStore.resetStatusButton();\n    }\n\n    render() {\n      //  let { handlePageClickedDGOStatus} = this.props.paginationStore;\n       let { DGOStatusHandleTableChange } = this.props.paginationStore;\n       let { selectedUnitsByDGOstatus, selectedDGOstatus } = this.props.homePageStore;\n      \n      if(selectedUnitsByDGOstatus.docs) {\n        return (\n          <div className='dataContainer'>\n             <h1 className='dataTitle'>Raport ze statusu: {selectedDGOstatus}</h1>\n          <div className='dataTable statusTable'>\n            \n            <Table\n              data={ selectedUnitsByDGOstatus.docs }\n              // page={ selectedPage }\n              // sizePerPage={ selectedUnitsByDiff.itemsPerPage }\n              totalSize={selectedUnitsByDGOstatus.amount}\n              onTableChange={ DGOStatusHandleTableChange  }\n            />   \n           \n      </div>\n          </div>\n        );\n      }\n      else {return (<div>Loading...</div>)}\n  }\n}\n","import React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\n// import Pagination from '../common/Pagination';\nimport Table from '../features/Table';\nimport Container from 'react-bootstrap/Container';\n// import Table from 'react-bootstrap/Table';\nimport Spinner from '../common/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport { CSVLink } from \"react-csv\";\nimport './DifferencePage.scss';\n\n@inject('appStore', 'homePageStore', 'paginationStore')\n@observer\n\nexport default class DatabasePage extends Component {\ncomponentDidMount(){\n    this.props.homePageStore.getSummary();\n    }\n\n    componentWillUnmount() {\n      \n      this.props.appStore.resetLoading();\n      this.props.homePageStore.resetAllRecords(); \n    }\n\n    render() {\n      //  let { handlePageClickedDGOStatus} = this.props.paginationStore;\n       let { summaryHandleTableChange} = this.props.paginationStore;\n       \n       let {summary, getAllRecords, allRecords} = this.props.homePageStore;\n  \n      let {loading} = this.props.appStore;\n\n      let downloadLink;\n    // console.log('What: ', selectedDGOstatus, 'Co: ', statusDisabled)\n    console.log('Loading: ', loading, 'Summary: ', allRecords)\n      \n    if (allRecords.length === 0 && loading === true) {\n      downloadLink = <Spinner />\n    } if (allRecords.length > 0 && loading === true) {\n      downloadLink  = <CSVLink data={allRecords}>Baza gotowa do pobrania</CSVLink>\n    }\n    if (allRecords.length === 0 && loading === false) {\n      downloadLink  = <Button className='csvButton' onClick={getAllRecords}> Pobierz bazę</Button>\n    }\n    \n      if(summary.docs) {\n        return (\n            <div className='dataContainer'>\n             <h1 className='dataTitle'>Kompletna baza danych</h1>\n          <Container className='dataTable'>\n            \n            <Table\n              data={ summary.docs }\n              // page={ selectedPage }\n              // sizePerPage={ selectedUnitsByDiff.itemsPerPage }\n              totalSize={summary.amount}\n              onTableChange={ summaryHandleTableChange  }\n            />   \n           \n      </Container>\n      <Container className='text-center mt-5'>\n        <div className='csvTitle'><p>Pobierz całą bazę w formacie CSV</p></div>\n        <div className='downloadLink'>\n          {downloadLink}\n        </div>\n        \n      </Container>\n          </div>\n        );\n      }\n      else {return (<div>Loading...</div>)}\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { observer, inject } from 'mobx-react';\n\n@inject('appStore')\n@observer\n\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    // constructor() {\n    //   super();\n    //   this.state = {\n    //     loading: true,\n    //     redirect: false,\n    //   };\n    // }\n    componentDidMount() {\n      fetch('/api/checkToken')\n        .then(res => {\n          if (res.status === 200) {\n            // this.setState({ loading: false });\n            this.props.appStore.logIn();\n            // this.props.appStore.getUser();\n            console.log('Zaloogowany: ', res.status)\n          }\n          else {\n            const error = new Error(res.error);\n            console.error(\"Error checkToken api\", res.status);\n            throw error;\n            \n          }\n        })\n        .catch(err => {\n          console.error(err);\n          // this.setState({ loading: false, redirect: true });\n          this.props.appStore.reDirect();\n        });\n    }\n    render() {\n      // const { loading, redirect } = this.state;  \n          const {login, redirect } = this.props.appStore;\n      console.log('Spr: ', login, redirect)\n      // if (loading) {\n      if (!login) {\n        return null;\n        \n      }\n      if (redirect) {\n        return <Redirect to=\"/login\" />;\n      }\n      return <ComponentToProtect {...this.props} />;\n      // return <Redirect to=\"/admin\" />;\n    }\n  }\n}","import React from 'react';\nimport { observer, Provider } from 'mobx-react';\nimport appStore from './stores/AppStore';\nimport { Switch, Route } from 'react-router-dom';\n// import { createBrowserHistory } from 'history';\nimport MainLayout from './components/layout/MainLayout';\nimport Home from './components/pages/HomePage';\nimport Admin from './components/pages/AdminPage';\nimport NotFound from './components/pages/NotFoundPage';\nimport Login from './components/pages/LoginPage';\nimport Logout from './components/pages/LogoutPage';\nimport OneRecordPage from './components/pages/OneRecordPage';\nimport DifferencePage from './components/pages/DifferencePage';\nimport DGOstatusPage from './components/pages/DGOstatusPage';\nimport Database from './components/pages/DatabasePage';\nimport WithAuth from './components/pages/WithAuth';\n// import NavbarWithRouter from './components/features/NavBar'\n// import history from './history';\n\n\n\n@observer\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider \n        appStore={appStore}\n        adminStore={appStore.adminStore}\n        homePageStore={appStore.homePageStore}\n        paginationStore={appStore.paginationStore}\n        >\n          {/* <Router history={history}> */}\n        <MainLayout>\n        {/* <NavbarWithRouter/> */}\n          <Switch>\n            \n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/database/range/:startAt/:limit\" component={Database} />\n            <Route exact path=\"/admin\" component={WithAuth(Admin)} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/logout\"component={Logout} />\n            <Route exact path='/raport1/address/:street/:number'component={OneRecordPage} />\n            <Route exact path='/raport2/difference/:diff/range/:startAt/:limit' component={DifferencePage} />\n            {/* <Route path='/raport2/differences/:diff' exact component={DifferencePage} /> */}\n            <Route path='/raport3/status/:status/range/:startAt/:limit' exact component={DGOstatusPage} />\n            <Route component={NotFound} />\n          </Switch>\n        </MainLayout>\n        {/* </Router> */}\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './styles/global.scss';\nimport 'animate.css/animate.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/css/bootstrap-theme.css';\n\nconst Root = () => (\n    <Router>\n        <App />\n    </Router>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}